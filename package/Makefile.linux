#
# Linux-specific packaging
#

define CP_DEB_FILES_TEMPLATE
.PHONY: $(2)/$(1)
$(2)/$(1): $(3)/$(1)
	$(V1)cp -a $$< $$@
endef

# Update this number for every formal release.  The Deb packaging system relies on this to know to update a
# package or not.  Otherwise, the user has to uninstall first.
VERNUM				:= 0.1.0
VERSION_FULL		:= $(VERNUM)-$(PACKAGE_LBL)

FLIGHT_FW			:= coptercontrol revolution sparky freedom revomini pipxtreme quanton flyingf3

DEB_BUILD_DIR		:= $(ROOT_DIR)/debian

SED_DATE_STRG		= $(shell date -R)
SED_SCRIPT			= s/<VERSION>/$(VERSION_FULL)/;s/<DATE>/$(SED_DATE_STRG)/

DEB_CFG_CMN			:= $(ROOT_DIR)/package/linux/deb_common
DEB_CFG_CMN_FILES	:= $(shell ls $(DEB_CFG_CMN))
DEB_CFG_I386_DIR	:= $(ROOT_DIR)/package/linux/deb_i386
DEB_CFG_I386_FILES	:= $(shell ls $(DEB_CFG_I386_DIR))
DEB_CFG_AMD64_DIR	:= $(ROOT_DIR)/package/linux/deb_amd64
DEB_CFG_AMD64_FILES	:= $(shell ls $(DEB_CFG_AMD64_DIR))
DEB_PLATFORM		:= amd64
DEB_MACHINE_DIR		:= $(DEB_CFG_AMD64_DIR)
DEB_MACHINE_FILES	:= $(DEB_CFG_AMD64_FILES)
MACHINE_TYPE		:= $(shell uname -m)
QT_SDK_DIR		:= $(ROOT_DIR)/tools/Qt5.2.0
QT_PLUGINS_DIR		:= $(QT_SDK_DIR)/5.2.0/gcc_64/plugins
ifneq ($(MACHINE_TYPE), x86_64)
 QT_PLUGINS_DIR		:= $(QT_SDK_DIR)/5.2.0/gcc/plugins
 DEB_PLATFORM		:= i386
 DEB_MACHINE_DIR	:= $(DEB_CFG_I386_DIR)
 DEB_MACHINE_FILES	:= $(DEB_CFG_I386_FILES)
endif
ALL_DEB_FILES  = $(foreach f, $(DEB_CFG_CMN_FILES), $(DEB_BUILD_DIR)/$(f))
ALL_DEB_FILES += $(foreach f, $(DEB_MACHINE_FILES), $(DEB_BUILD_DIR)/$(f))

DEB_PACKAGE_NAME	:= taulabs_$(VERSION_FULL)_$(DEB_PLATFORM)

QT_PLUGINS_USED		:=imageformats platforms sqldrivers

linux_standalone: gcs
	@echo $@ starting
	@echo Copying Qt5 plugins libraries
	$(V1) mkdir -p "$(ROOT_DIR)/build/ground/gcs/lib/taulabs/qtplugins"
	$(V1)cp -v -R $(QT_PLUGINS_DIR)/imageformats $(ROOT_DIR)/build/ground/gcs/lib/taulabs/qtplugins/
	$(V1)cp -v -R $(QT_PLUGINS_DIR)/platforms $(ROOT_DIR)/build/ground/gcs/lib/taulabs/qtplugins/
	$(V1) mkdir -p "$(ROOT_DIR)/build/ground/gcs/lib/taulabs/qtplugins/sqldrivers"
	$(V1)cp -v -R $(QT_PLUGINS_DIR)/sqldrivers/libqsqlite.so $(ROOT_DIR)/build/ground/gcs/lib/taulabs/qtplugins/sqldrivers
	@echo Copying platform libraries dependencies
	$(V1)find $(QT_PLUGINS_DIR)/platforms/ -name '*.so'	| xargs -I '{}' ldd '{}'| sed -e '/^[^\t]/ d; s/^\t\(.* => \)\?\([^ ]*\) (.*/\2/g' \
	| grep "Qt5" | grep -v "build/ground" | sort | uniq | xargs -I '{}' cp -v -f '{}' $(ROOT_DIR)/build/ground/gcs/lib/taulabs 
	@echo Searching and copying used Qt5 libraries
	$(V1)find $(ROOT_DIR)/build/ground/gcs/bin/taulabsgcs.bin $(ROOT_DIR)/build/ground/gcs/lib/taulabs/plugins/TauLabs/*.so -exec ldd {} \; \
	| sed -e '/^[^\t]/ d; s/^\t\(.* => \)\?\([^ ]*\) (.*/\2/g'| grep "Qt5" | grep -v "build/ground" | sort | uniq | xargs -I '{}' cp -v -f '{}' $(ROOT_DIR)/build/ground/gcs/lib/taulabs
	@echo Copying qt.conf file
	$(V1)cp -v $(ROOT_DIR)/package/linux/qt.conf $(ROOT_DIR)/build/ground/gcs/bin/
linux_deb_package: deb_build linux_standalone
	@echo $@ starting
	cd .. && dpkg-buildpackage -b -us -uc
	$(V1)mv $(ROOT_DIR)/../$(DEB_PACKAGE_NAME).deb $(BUILD_DIR)
	$(V1)mv $(ROOT_DIR)/../$(DEB_PACKAGE_NAME).changes $(BUILD_DIR)
	$(V1)rm -rf $(DEB_BUILD_DIR)

deb_build: | $(DEB_BUILD_DIR) $(ALL_DEB_FILES) $(BUILD_DIR)/build 
	@echo $@ starting
	$(V1)$(shell echo $(FW_DIR) > $(BUILD_DIR)/package_dir)
	$(V1)sed -i -e "$(SED_SCRIPT)" $(DEB_BUILD_DIR)/changelog

$(BUILD_DIR)/build: package_flight package_matlab

$(DEB_BUILD_DIR): 
	@echo $@ starting
	$(V1)mkdir -p $(DEB_BUILD_DIR)

$(foreach cpfile, $(DEB_CFG_CMN_FILES), $(eval $(call CP_DEB_FILES_TEMPLATE,$(cpfile),$(DEB_BUILD_DIR),$(DEB_CFG_CMN))))

$(foreach cpfile, $(DEB_MACHINE_FILES), $(eval $(call CP_DEB_FILES_TEMPLATE,$(cpfile),$(DEB_BUILD_DIR),$(DEB_MACHINE_DIR))))

gcs: uavobjects_gcs
	@echo "Linux Package Make of GCS."
	$(V1) $(MAKE) -C $(ROOT_DIR) GCS_BUILD_CONF=release $@

identify:
	@echo ""
	@echo "We are in the Linux Package Make system."
	@echo ""

ground_package: | identify linux_deb_package

.PHONY: identify gcs ground_package linux_deb_package deb_build $(DEB_BUILD_DIR)
